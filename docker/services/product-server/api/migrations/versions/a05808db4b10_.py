"""empty message

Revision ID: a05808db4b10
Revises: 440888eb0622
Create Date: 2024-04-25 16:52:30.838474

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import text
import json


# revision identifiers, used by Alembic.
revision = 'a05808db4b10'
down_revision = '440888eb0622'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('app_theme', sa.Column('readonly', sa.Boolean(), nullable=True))
    themes = [
    {
        "name": "Red",
        "readOnly": True,
        "modes": [
            {
                "mode": "light",
                "bg_variant": "v3",
                "contrast_color": "#C73841",
                "chart_colors": [
                    "#E63049", "#E56590", "#EBB473", "#736CD6", "#98B0F5",
                    "#C083EB", "#83BD63", "#C1D97C", "#5FC2AD", "#BEAFA0"
                ],
                 "params": {}
            },
            {
                "mode": "dark",
                "bg_variant": "v3",
                "contrast_color": "#D03C4E",
                "chart_colors": [
                    "#D03C4E", "#E56590", "#E7B376", "#6F67D2", "#92ACEE",
                    "#B983E0", "#82BB62", "#CBE28D", "#60C29F", "#CDB8B8"
                ],
                 "params": {}
            }
        ]
    },
    {
        "name": "Blue",
        "readOnly": True,
        "modes": [
            {
                "mode": "light",
                "bg_variant": "v3",
                "contrast_color": "#1273E5",
                "chart_colors": [
                    "#1273E5", "#9C8EF5", "#A8CFFF", "#E07595", "#F59D91",
                    "#F5A4EB", "#C6E07E", "#81D489", "#EBE382", "#D4C7BA"
                ],
                 "params": {}
            },
            {
                "mode": "dark",
                "bg_variant": "v3",
                "contrast_color": "#287DE1",
                "chart_colors": [
                    "#308FFF", "#A384FC", "#62C6FC", "#FC6B96", "#FE9088",
                    "#DA81D1", "#A3BD59", "#5EB567", "#DCD16C", "#6E6E82"
                ],
                 "params": {}
            }
        ]
    },
    {
        "name": "Yellow",
        "readOnly": True,
        "modes": [
            {
                "mode": "light",
                "bg_variant": "v3",
                "contrast_color": "#F2BC5C",
                "chart_colors": [
                    "#F2BC5C", "#F2805C", "#C6E07E", "#B87FF5", "#8675EB",
                    "#E55EB0", "#5CE5C8", "#93BCED", "#33B79B", "#B1B0C2"
                ],
                 "params": {}
            },
            {
                "mode": "dark",
                "bg_variant": "v3",
                "contrast_color": "#EDCE65",
                "chart_colors": [
                    "#EDCE65", "#EA9D42", "#BFCC6B", "#A37FD7", "#7065C8",
                    "#CF5692", "#8AD3ED", "#45CAA4", "#25938E", "#AAA7B9"
                ],
                 "params": {}
            }
        ]
    },
    {
        "name": "Green",
        "readOnly": True,
        "modes": [
            {
                "mode": "light",
                "bg_variant": "v3",
                "contrast_color": "#37BE8F",
                "chart_colors": [
                    "#37BE8F", "#A6D8FB", "#B3E78D", "#C084EB", "#FC8AD2",
                    "#8980EB", "#F88981", "#F8C67D", "#FD9CB8", "#EADEC9"
                ],
                 "params": {}
            },
            {
                "mode": "dark",
                "bg_variant": "v3",
                "contrast_color": "#0FC183",
                "chart_colors": [
                    "#0FC183", "#80C4F2", "#BFF299", "#C584F4", "#FD7DCE",
                    "#948DE7", "#E76043", "#E5AA52", "#F28AA8", "#56605C"
                ],
                 "params": {}
            }
        ]
    },
    {
        "name": "Purple",
        "readOnly": True,
        "modes": [
            {
                "mode": "light",
                "bg_variant": "v3",
                "contrast_color": "#8257FC",
                "chart_colors": [
                    "#8257FC", "#70A1FC", "#E69DFF", "#F6BB75", "#EF9880",
                    "#F96CAC", "#D9F196", "#94C077", "#72D2CD", "#8DE6E7"
                ],
                 "params": {}
            },
            {
                "mode": "dark",
                "bg_variant": "v3",
                "contrast_color": "#AA8EFC",
                "chart_colors": [
                    "#7D61D2", "#608BDB", "#C387DB", "#FEAB49", "#DE775D",
                    "#D45190", "#B8CE82", "#7EA468", "#73C0B7", "#484661"
                ],
                 "params": {}
            }
        ]
    },
    {
        "name": "Orange",
        "readOnly": True,
        "modes": [
            {
                "mode": "light",
                "bg_variant": "v3",
                "contrast_color": "#FCA74A",
                "chart_colors": [
                    "#FCA74A", "#FA8585", "#F0E18C", "#C6A2F3", "#A397F3",
                    "#FFA0CE", "#BEF49A", "#7BDAC9", "#ADDDFF", "#E2DACB"
                ],
                 "params": {}
            },
            {
                "mode": "dark",
                "bg_variant": "v3",
                "contrast_color": "#EE9636",
                "chart_colors": [
                    "#EE9636", "#E56669", "#D9C96B", "#A87BE3", "#7065C9",
                    "#CF5692", "#9ED97B", "#65C0B1", "#4C9FDA", "#CAC1B2"
                ],
                 "params": {}
            }
        ]
    }
    ]
    # Iterate over each theme in the array
    for theme in themes:
        theme_id = op.get_bind().execute(
            sa.text("SELECT id FROM app_theme WHERE name = :name"),
            {'name': theme['name']}
        ).scalar()

        if not theme_id:
            # Insert the new theme if it does not exist and set readonly to true
            theme_id = op.get_bind().execute(
                sa.text("""
                    INSERT INTO app_theme (name, readonly) VALUES (:name, :readonly)
                    RETURNING id
                """),
                {'name': theme['name'], 'readonly': True}
            ).scalar()
        else:
            # Updating readonly to true if the theme already exists
            op.get_bind().execute(
                sa.text("""
                    UPDATE app_theme SET readonly = :readonly WHERE id = :id
                """),
                {'readonly': True, 'id': theme_id}
            )

        # Process each mode in the theme
        for mode in theme['modes']:
            mode_id = op.get_bind().execute(
                sa.text("""
                    SELECT id FROM app_theme_mode WHERE app_theme_id = :theme_id AND mode = :mode
                """),
                {'theme_id': theme_id, 'mode': mode['mode']}
            ).scalar()

            if not mode_id:
                # Inserting new mode if it does not exist
                op.get_bind().execute(
                    sa.text("""
                        INSERT INTO app_theme_mode (app_theme_id, mode, bg_variant, contrast_color, chart_colors, params)
                        VALUES (:theme_id, :mode, :bg_variant, :contrast_color, :chart_colors, '{}')
                    """),
                    {
                        'theme_id': theme_id,
                        'mode': mode['mode'],
                        'bg_variant': mode['bg_variant'],
                        'contrast_color': mode['contrast_color'],
                        'chart_colors': json.dumps(mode['chart_colors']),
                    }
                )
            else:
                # Updating existing mode with new details
                op.get_bind().execute(
                    sa.text("""
                        UPDATE app_theme_mode
                        SET bg_variant = :bg_variant, contrast_color = :contrast_color, chart_colors = :chart_colors, params = '{}'
                        WHERE id = :id
                    """),
                    {
                        'id': mode_id,
                        'bg_variant': mode['bg_variant'],
                        'contrast_color': mode['contrast_color'],
                        'chart_colors': json.dumps(mode['chart_colors']),
                    }
                )

def downgrade():
    op.drop_column('app_theme', 'readonly')
    # ### end Alembic commands ###