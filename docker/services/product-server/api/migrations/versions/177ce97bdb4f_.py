"""empty message

Revision ID: 177ce97bdb4f
Revises: 46dacde1ba9b
Create Date: 2023-11-16 14:14:40.128983

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "177ce97bdb4f"
down_revision = "447e00a43975"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "model_job",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("type", sa.String(length=100), nullable=True),
        sa.Column("uuid", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("started_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("ended_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("status", sa.String(length=100), nullable=True),
        sa.Column("progress", sa.Integer(), nullable=True),
        sa.Column("config", sa.Text(), nullable=True),
        sa.Column("created_by", sa.Integer(), nullable=True),
        sa.Column("updated_by", sa.Integer(), nullable=True),
        sa.Column("deleted_by", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["deleted_by"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["updated_by"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("uuid", name="uq_model_job_uuid"),
    )
    op.create_table(
        "supported_model",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("name", sa.String(length=1000), nullable=True),
        sa.Column("description", sa.String(length=5000), nullable=True),
        sa.Column("tags", sa.String(length=5000), nullable=True),
        sa.Column("task_type", sa.String(length=500), nullable=True),
        sa.Column("location", sa.String(length=5000), nullable=True),
        sa.Column("size", sa.String(length=10), nullable=True),
        sa.Column("estimated_cost", sa.Float(), nullable=True),
        sa.Column("version", sa.String(length=2000), nullable=True),
        sa.Column("is_finetuned", sa.Boolean(), nullable=True),
        sa.Column("job_id", sa.Integer(), nullable=True),
        sa.Column("parent_model_id", sa.Integer(), nullable=True),
        sa.Column("created_by", sa.Integer(), nullable=True),
        sa.Column("updated_by", sa.Integer(), nullable=True),
        sa.Column("deleted_by", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["deleted_by"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["job_id"],
            ["model_job.id"],
        ),
        sa.ForeignKeyConstraint(
            ["parent_model_id"],
            ["supported_model.id"],
        ),
        sa.ForeignKeyConstraint(
            ["updated_by"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", name="uq_supported_model_name"),
    )
    op.create_table(
        "hosted_model",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("name", sa.String(length=1000), nullable=True),
        sa.Column("endpoint", sa.String(length=5000), nullable=True),
        sa.Column("main_access_key", sa.String(length=1000), nullable=True),
        sa.Column("aux_access_key", sa.String(length=1000), nullable=True),
        sa.Column("status", sa.String(length=100), nullable=True),
        sa.Column("type", sa.String(length=100), nullable=True),
        sa.Column("description", sa.String(length=5000), nullable=True),
        sa.Column("cost", sa.Float(), nullable=True),
        sa.Column("config", sa.Text(), nullable=True),
        sa.Column("started_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("ended_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("original_model_id", sa.Integer(), nullable=True),
        sa.Column("job_id", sa.Integer(), nullable=True),
        sa.Column("created_by", sa.Integer(), nullable=True),
        sa.Column("updated_by", sa.Integer(), nullable=True),
        sa.Column("deleted_by", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["deleted_by"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["job_id"],
            ["model_job.id"],
        ),
        sa.ForeignKeyConstraint(
            ["original_model_id"],
            ["supported_model.id"],
        ),
        sa.ForeignKeyConstraint(
            ["updated_by"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", name="uq_hosted_model_name"),
    )
    # ### end Alembic commands ###
    # ### Manual Data Entry ###
    op.execute(
        """
INSERT INTO public."user"
(id, created_at, first_name, last_name, email_address)
SELECT 0, now(),  'System', 'NucliOS', 'sytem.nuclios@mathco.com'
WHERE
NOT EXISTS (
SELECT id FROM public."user" WHERE id = 0);
INSERT INTO public.supported_model
(created_at,"size", "name", description, tags, "location", is_finetuned, created_by)
values
(now(), '2.7GB', 'microsoft/phi-1_5', 'The language model phi-1.5 is a Transformer with 1.3 billion parameters. It was trained using the same data sources as phi-1, augmented with a new data source that consists of various NLP synthetic texts. When assessed against benchmarks testing common sense, language understanding, and logical reasoning, phi-1.5 demonstrates a nearly state-of-the-art performance among models with less than 10 billion parameters.','', '/model-repository/1/repo/', false, 0),
(now(), '12.55GB', 'WizardLM/WizardCoder-Python-7B-V1.0', 'Empowering Large Pre-Trained Language Models to Follow Complex Instructions', '', '/model-repository/2/repo/', false, 0),
(now(), '1.51GB', 'facebook/bart-large-cnn', 'BART model pre-trained on English language, and fine-tuned on CNN Daily Mail. It was introduced in the paper BART: Denoising Sequence-to-Sequence Pre-training for Natural Language Generation, Translation, and Comprehension by Lewis et al. and first released in [this repository (https://github.com/pytorch/fairseq/tree/master/examples/bart).', '', '/model-repository/3/repo/', false, 0),
(now(), '12.55GB', 'lmsys/vicuna-7b-v1.5', 'Vicuna is a chat assistant trained by fine-tuning Llama 2 on user-shared conversations collected from ShareGPT.', '', '/model-repository/4/repo/', false, 0),
(now(), '5.29GB', 'databricks/dolly-v2-3b', 'Databricks dolly-v2-3b, an instruction-following large language model trained on the Databricks machine learning platform that is licensed for commercial use. Based on pythia-2.8b, Dolly is trained on ~15k instruction/response fine tuning records databricks-dolly-15k generated by Databricks employees in capability domains from the InstructGPT paper, including brainstorming, classification, closed QA, generation, information extraction, open QA and summarization. dolly-v2-3b is not a state-of-the-art model, but does exhibit surprisingly high quality instruction following behavior not characteristic of the foundation model on which it is based.', '', '/model-repository/5/repo/', false, 0),
(now(), '28.9GB', 'defog/sqlcoder2', 'Defog''s SQLCoder is a state-of-the-art LLM for converting natural language questions to SQL queries.', '', '/model-repository/6/repo/', false, 0),
(now(), '13.98GB', 'mistralai/Mistral-7B-v0.1', 'The Mistral-7B-v0.1 Large Language Model (LLM) is a pretrained generative text model with 7 billion parameters. Mistral-7B-v0.1 outperforms Llama 2 13B', '', '/model-repository/7/repo/', false, 0),
(now(), '13.49GB', 'HuggingFaceH4/zephyr-7b-beta', 'Zephyr is a series of language models that are trained to act as helpful assistants. Zephyr-7B-Î² is the second model in the series, and is a fine-tuned version of mistralai/Mistral-7B-v0.1 that was trained on on a mix of publicly available, synthetic datasets using Direct Preference Optimization (DPO).', '', '/model-repository/8/repo/', false, 0),
(now(), '0.43GB', 'sentence-transformersmulti-qa-mpnet-base-cos-v1', 'This is a sentence-transformers model: It maps sentences & paragraphs to a 768 dimensional dense vector space and was designed for semantic search. It has been trained on 215M (question, answer) pairs from diverse sources.', '', '/model-repository/9/repo/', false, 0),
(now(), '12.55GB', 'meta-llama/Llama-2-7b-hf', 'Llama 2 is a collection of pretrained and fine-tuned generative text models ranging in scale from 7 billion to 70 billion parameters. This is the repository for the 7B pretrained model, converted for the Hugging Face Transformers format.', '', '/model-repository/10/repo/', false, 0);
        """
    )


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("hosted_model")
    op.drop_table("supported_model")
    op.drop_table("model_job")
    # ### end Alembic commands ###
