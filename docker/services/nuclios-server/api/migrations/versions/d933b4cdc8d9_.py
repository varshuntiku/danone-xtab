"""empty message

Revision ID: d933b4cdc8d9
Revises: d099dfe3ef9f
Create Date: 2024-05-07 12:00:18.793346

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "d933b4cdc8d9"
down_revision = "d099dfe3ef9f"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("stake_holder")
    op.drop_table("problem_overview")
    op.drop_table("decision_flow")
    op.drop_table("widget_connected_system_identifier")
    op.drop_table("goal")
    op.drop_table("initiative")
    op.drop_table("problem_definition")
    op.drop_table("business_process")
    op.drop_table("conn_system_dashboard")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "business_process",
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("updated_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.Column("deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('business_process_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
        sa.Column("dashboard_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("is_active", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("created_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("deleted_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(["created_by"], ["user.id"], name="business_process_created_by_fkey"),
        sa.ForeignKeyConstraint(
            ["dashboard_id"], ["conn_system_dashboard.id"], name="business_process_dashboard_id_fkey"
        ),
        sa.ForeignKeyConstraint(["deleted_by"], ["user.id"], name="business_process_deleted_by_fkey"),
        sa.ForeignKeyConstraint(["updated_by"], ["user.id"], name="business_process_updated_by_fkey"),
        sa.PrimaryKeyConstraint("id", name="business_process_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "initiative",
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("updated_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.Column("deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
        sa.Column("dashboard_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("tag", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_active", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("created_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("deleted_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("business_process_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("problem_definition_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["business_process_id"], ["business_process.id"], name="initiative_business_process_id_fkey"
        ),
        sa.ForeignKeyConstraint(["created_by"], ["user.id"], name="initiative_created_by_fkey"),
        sa.ForeignKeyConstraint(["dashboard_id"], ["conn_system_dashboard.id"], name="initiative_dashboard_id_fkey"),
        sa.ForeignKeyConstraint(["deleted_by"], ["user.id"], name="initiative_deleted_by_fkey"),
        sa.ForeignKeyConstraint(
            ["problem_definition_id"], ["problem_definition.id"], name="initiative_problem_definition_id_fkey"
        ),
        sa.ForeignKeyConstraint(["updated_by"], ["user.id"], name="initiative_updated_by_fkey"),
        sa.PrimaryKeyConstraint("id", name="initiative_pkey"),
    )
    op.create_table(
        "problem_definition",
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("updated_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.Column("deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('problem_definition_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
        sa.Column("business_process_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("is_active", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("created_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("deleted_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["business_process_id"], ["business_process.id"], name="problem_definition_business_process_id_fkey"
        ),
        sa.ForeignKeyConstraint(["created_by"], ["user.id"], name="problem_definition_created_by_fkey"),
        sa.ForeignKeyConstraint(["deleted_by"], ["user.id"], name="problem_definition_deleted_by_fkey"),
        sa.ForeignKeyConstraint(["updated_by"], ["user.id"], name="problem_definition_updated_by_fkey"),
        sa.PrimaryKeyConstraint("id", name="problem_definition_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "goal",
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("updated_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.Column("deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
        sa.Column("dashboard_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("target", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("module", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("problem", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("problem_aread", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("deleted_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(["created_by"], ["user.id"], name="goal_created_by_fkey"),
        sa.ForeignKeyConstraint(["dashboard_id"], ["conn_system_dashboard.id"], name="goal_dashboard_id_fkey"),
        sa.ForeignKeyConstraint(["deleted_by"], ["user.id"], name="goal_deleted_by_fkey"),
        sa.ForeignKeyConstraint(["updated_by"], ["user.id"], name="goal_updated_by_fkey"),
        sa.PrimaryKeyConstraint("id", name="goal_pkey"),
    )
    op.create_table(
        "conn_system_dashboard",
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("updated_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.Column("deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('conn_system_dashboard_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("name", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("is_active", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("created_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("deleted_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(["created_by"], ["user.id"], name="conn_system_dashboard_created_by_fkey"),
        sa.ForeignKeyConstraint(["deleted_by"], ["user.id"], name="conn_system_dashboard_deleted_by_fkey"),
        sa.ForeignKeyConstraint(["updated_by"], ["user.id"], name="conn_system_dashboard_updated_by_fkey"),
        sa.PrimaryKeyConstraint("id", name="conn_system_dashboard_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "widget_connected_system_identifier",
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("updated_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.Column("deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("app_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("widget_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("business_process_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("dashboard_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("problem_definition_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("is_active", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("created_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("deleted_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(["app_id"], ["app.id"], name="widget_connected_system_identifier_app_id_fkey"),
        sa.ForeignKeyConstraint(
            ["business_process_id"],
            ["business_process.id"],
            name="widget_connected_system_identifier_business_process_id_fkey",
        ),
        sa.ForeignKeyConstraint(["created_by"], ["user.id"], name="widget_connected_system_identifier_created_by_fkey"),
        sa.ForeignKeyConstraint(
            ["dashboard_id"], ["conn_system_dashboard.id"], name="widget_connected_system_identifier_dashboard_id_fkey"
        ),
        sa.ForeignKeyConstraint(["deleted_by"], ["user.id"], name="widget_connected_system_identifier_deleted_by_fkey"),
        sa.ForeignKeyConstraint(
            ["problem_definition_id"],
            ["problem_definition.id"],
            name="widget_connected_system_identifier_problem_definition_id_fkey",
        ),
        sa.ForeignKeyConstraint(["updated_by"], ["user.id"], name="widget_connected_system_identifier_updated_by_fkey"),
        sa.ForeignKeyConstraint(
            ["widget_id"], ["app_screen_widget.id"], name="widget_connected_system_identifier_widget_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="widget_connected_system_identifier_pkey"),
    )
    op.create_table(
        "decision_flow",
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("updated_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.Column("deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("created_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("deleted_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("flow_identifier", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
        sa.Column("url", sa.VARCHAR(length=500), autoincrement=False, nullable=False),
        sa.Column("status_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(["created_by"], ["user.id"], name="decision_flow_created_by_fkey"),
        sa.ForeignKeyConstraint(["deleted_by"], ["user.id"], name="decision_flow_deleted_by_fkey"),
        sa.ForeignKeyConstraint(["updated_by"], ["user.id"], name="decision_flow_updated_by_fkey"),
        sa.PrimaryKeyConstraint("id", name="decision_flow_pkey"),
    )
    op.create_table(
        "problem_overview",
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("updated_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.Column("deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
        sa.Column("is_active", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("status", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("contact", sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column("metrics", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("current_stage", sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column("next_stage", sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column("problem_definition_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("deleted_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(["created_by"], ["user.id"], name="problem_overview_created_by_fkey"),
        sa.ForeignKeyConstraint(["deleted_by"], ["user.id"], name="problem_overview_deleted_by_fkey"),
        sa.ForeignKeyConstraint(
            ["problem_definition_id"], ["problem_definition.id"], name="problem_overview_problem_definition_id_fkey"
        ),
        sa.ForeignKeyConstraint(["updated_by"], ["user.id"], name="problem_overview_updated_by_fkey"),
        sa.PrimaryKeyConstraint("id", name="problem_overview_pkey"),
    )
    op.create_table(
        "stake_holder",
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("updated_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.Column("deleted_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(length=100), autoincrement=False, nullable=False),
        sa.Column("dashboard_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("is_active", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("avatar", sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column("designation", sa.VARCHAR(length=100), autoincrement=False, nullable=True),
        sa.Column("problem_definition_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("created_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("updated_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("deleted_by", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(["created_by"], ["user.id"], name="stake_holder_created_by_fkey"),
        sa.ForeignKeyConstraint(["dashboard_id"], ["conn_system_dashboard.id"], name="stake_holder_dashboard_id_fkey"),
        sa.ForeignKeyConstraint(["deleted_by"], ["user.id"], name="stake_holder_deleted_by_fkey"),
        sa.ForeignKeyConstraint(
            ["problem_definition_id"], ["problem_definition.id"], name="stake_holder_problem_definition_id_fkey"
        ),
        sa.ForeignKeyConstraint(["updated_by"], ["user.id"], name="stake_holder_updated_by_fkey"),
        sa.PrimaryKeyConstraint("id", name="stake_holder_pkey"),
    )
    # ### end Alembic commands ###
