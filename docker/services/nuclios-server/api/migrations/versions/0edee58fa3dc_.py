"""empty message

Revision ID: 0edee58fa3dc
Revises: bb603a69b6c7
Create Date: 2023-01-12 10:59:10.136243

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "0edee58fa3dc"
down_revision = "dd3aef88aba1"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    #     op.execute(
    #         # """insert into app_mapping (app_id, function_id , industry_id) select a.id, f.id, i.id from app a inner join industry i on a.industry = i.industry_name inner join [functions] f on a.function = f.function_name and f.industry_id = i.id where a.deleted_at is null"""
    #         """
    # INSERT INTO app_mapping (app_id, function_id, industry_id)
    # SELECT a.id, f.id, i.id
    # FROM [app] a
    # INNER JOIN industry i ON a.industry = i.industry_name
    # INNER JOIN [functions] f ON a.[function] = f.function_name AND f.industry_id = i.id
    # WHERE a.deleted_at IS NULL;

    # """
    #     )
    op.drop_column("app", "industry")
    op.drop_column("app", "function")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("app", sa.Column("function", sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column("app", sa.Column("industry", sa.TEXT(), autoincrement=False, nullable=True))
    # downgrade sql execute tobe added
    op.execute(
        """
    update app
    set
    "function" = (select function_name from "functions" join app_mapping on app_mapping.function_id = "functions".id where app_mapping.app_id = app.id),
    "industry" = (select industry_name from industry join app_mapping on app_mapping.industry_id = industry.id where app_mapping.app_id = app.id)
    """
    )
    # ### end Alembic commands ###
