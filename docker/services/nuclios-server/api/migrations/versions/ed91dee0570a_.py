"""empty message

Revision ID: ed91dee0570a
Revises: a3c5d69f4112
Create Date: 2021-04-22 16:40:50.770696

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import inspect


def drop_constraints(op, table_name, column_name):
    conn = op.get_bind()
    inspector = inspect(conn)

    # Define your table and column names
    table_name = table_name
    column_name = column_name
    # Get the dynamically generated foreign key constraint name
    foreign_keys = inspector.get_foreign_keys(table_name)
    print(foreign_keys)

    # Find the correct foreign key constraint dynamically
    constraint_name = None
    for fk in foreign_keys:
        if fk["constrained_columns"] == [column_name]:
            constraint_name = fk["name"]
            break

    if constraint_name:
        # Drop the foreign key constraint using its dynamic name
        op.drop_constraint(constraint_name, table_name, type_="foreignkey")


# revision identifiers, used by Alembic.
revision = "ed91dee0570a"
down_revision = "a3c5d69f4112"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "story_app_mapping",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("story_id", sa.Integer(), nullable=True),
        sa.Column("app_id", sa.Integer(), nullable=True),
        sa.Column("created_by", sa.Integer(), nullable=True),
        sa.Column("updated_by", sa.Integer(), nullable=True),
        sa.Column("deleted_by", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["app_id"],
            ["app.id"],
        ),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["deleted_by"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["story_id"],
            ["story.id"],
        ),
        sa.ForeignKeyConstraint(
            ["updated_by"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # op.drop_constraint("story_app_id_fkey", "story", type_="foreignkey")
    drop_constraints(op, "story", "app_id")

    op.drop_column("story", "app_id")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("story", sa.Column("app_id", sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key("story_app_id_fkey", "story", "app", ["app_id"], ["id"])
    op.drop_table("story_app_mapping")
    # ### end Alembic commands ###
