"""empty message

Revision ID: 46dacde1ba9b
Revises: 3d0ea78696d8
Create Date: 2023-10-16 14:57:52.410568

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "46dacde1ba9b"
down_revision = "3d0ea78696d8"
branch_labels = None
depends_on = None


class HexByteString(sa.TypeDecorator):
    """Convert Python bytestring to string with hexadecimal digits and back for storage."""

    impl = sa.String

    def process_bind_param(self, value, dialect):
        if not isinstance(value, bytes):
            raise TypeError("HexByteString columns support only bytes values.")
        return value.hex()

    def process_result_value(self, value, dialect):
        return bytes.fromhex(value) if value else None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "nac_role_permissions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("name", sa.String(length=1000), nullable=False),
        sa.Column("permission_type", sa.Integer(), nullable=True),
        sa.Column("created_by", sa.Integer(), nullable=True),
        sa.Column("updated_by", sa.Integer(), nullable=True),
        sa.Column("deleted_by", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["deleted_by"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["updated_by"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "nac_roles",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("name", sa.String(length=1000), nullable=False),
        sa.Column("user_role_type", sa.Integer(), nullable=True),
        sa.Column("created_by", sa.Integer(), nullable=True),
        sa.Column("updated_by", sa.Integer(), nullable=True),
        sa.Column("deleted_by", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["deleted_by"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["updated_by"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_password_code",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("user_email", sa.String(length=100), nullable=False),
        sa.Column("secret", HexByteString(), nullable=True),
        sa.Column("attempt", sa.Integer(), nullable=True),
        sa.Column("verify_attempt", sa.Integer(), nullable=True),
        sa.Column("created_by", sa.Integer(), nullable=True),
        sa.Column("updated_by", sa.Integer(), nullable=True),
        sa.Column("deleted_by", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["deleted_by"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["updated_by"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "nac_role_permissions_identifier",
        sa.Column("nac_role_id", sa.Integer(), nullable=True),
        sa.Column("nac_role_permissions_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["nac_role_id"],
            ["nac_roles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["nac_role_permissions_id"],
            ["nac_role_permissions.id"],
        ),
    )
    op.create_table(
        "nac_user_role_identifier",
        sa.Column("nac_role_id", sa.Integer(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["nac_role_id"],
            ["nac_roles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
    )
    op.add_column("user", sa.Column("password_hash", HexByteString(), nullable=True))
    op.add_column("user", sa.Column("last_logout", sa.DateTime(timezone=True), nullable=True))
    op.add_column("user", sa.Column("restricted_user", sa.Boolean(), nullable=True))
    op.add_column("user", sa.Column("failed_login_count", sa.Integer(), nullable=True))
    op.add_column("user", sa.Column("failed_login_at", sa.DateTime(timezone=True), nullable=True))
    op.add_column("user_group", sa.Column("app", sa.Boolean(), nullable=True))
    op.add_column("user_group", sa.Column("case_studies", sa.Boolean(), nullable=True))
    op.add_column("user_group", sa.Column("my_projects_only", sa.Boolean(), nullable=True))
    op.add_column("user_group", sa.Column("my_projects", sa.Boolean(), nullable=True))
    op.add_column("user_group", sa.Column("all_projects", sa.Boolean(), nullable=True))
    op.add_column("user_group", sa.Column("widget_factory", sa.Boolean(), nullable=True))
    op.add_column("user_group", sa.Column("environments", sa.Boolean(), nullable=True))
    op.add_column("user_group", sa.Column("app_publish", sa.Boolean(), nullable=True))
    op.add_column("user_group", sa.Column("prod_app_publish", sa.Boolean(), nullable=True))
    op.drop_column("user_group", "config")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("user_group", sa.Column("config", sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_column("user_group", "prod_app_publish")
    op.drop_column("user_group", "app_publish")
    op.drop_column("user_group", "environments")
    op.drop_column("user_group", "widget_factory")
    op.drop_column("user_group", "all_projects")
    op.drop_column("user_group", "my_projects")
    op.drop_column("user_group", "my_projects_only")
    op.drop_column("user_group", "case_studies")
    op.drop_column("user_group", "app")
    op.drop_column("user", "failed_login_at")
    op.drop_column("user", "failed_login_count")
    op.drop_column("user", "restricted_user")
    op.drop_column("user", "last_logout")
    op.drop_column("user", "password_hash")
    op.drop_table("nac_user_role_identifier")
    op.drop_table("nac_role_permissions_identifier")
    op.drop_table("user_password_code")
    op.drop_table("nac_roles")
    op.drop_table("nac_role_permissions")
    # ### end Alembic commands ###
