"""empty message

Revision ID: c616b168fb11
Revises: 069a6434b22c
Create Date: 2024-08-01 12:31:58.487984

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import inspect


def drop_constraints(op, table_name, column_name):
    conn = op.get_bind()
    inspector = inspect(conn)

    # Define your table and column names
    table_name = table_name
    column_name = column_name
    # Get the dynamically generated foreign key constraint name
    foreign_keys = inspector.get_foreign_keys(table_name)
    print(foreign_keys)

    # Find the correct foreign key constraint dynamically
    constraint_name = None
    for fk in foreign_keys:
        if fk["constrained_columns"] == [column_name]:
            constraint_name = fk["name"]
            break

    if constraint_name:
        # Drop the foreign key constraint using its dynamic name
        op.drop_constraint(constraint_name, table_name, type_="foreignkey")

# revision identifiers, used by Alembic.
revision: str = "c616b168fb11"
down_revision: Union[str, None] = "9a180e8ff45a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_constraint("dashboard_conn_system_dashboard_id_fkey", "dashboard", type_="foreignkey")
    drop_constraints(op, "dashboard", "conn_system_dashboard_id")

    op.drop_column("dashboard", "conn_system_dashboard_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("dashboard", sa.Column("conn_system_dashboard_id", sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key(
        "dashboard_conn_system_dashboard_id_fkey",
        "dashboard",
        "conn_system_dashboard",
        ["conn_system_dashboard_id"],
        ["id"],
    )
    # ### end Alembic commands ###
