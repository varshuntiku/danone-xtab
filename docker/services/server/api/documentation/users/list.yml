summary: "List of users"
tags:
  - platform/Users
description: "This returns list of all users"
produces:
- "application/json"
security:
  - Authorization: []

requestBody:
  required: true
  content:
    application/json:
      schema:
        required: ['page','pageSize']
        optional: ['filtered', 'sorted']
        properties:
          page:
            type: "integer"
          pageSize:
            type: "integer"
          filtered:
            type: "array"
            items: "object"
            required: [id, value]
            properties:
              id:
                type: 'string'
              value:
                type: 'string'
              example: {'id': 'first_name', 'value': 'testuser'}
          sorted:
            type: "array"
            items: "object"
            required: [id, desc]
            properties:
              id:
                type: 'string'
              value:
                type: 'boolean'
              example: {'id': 'first_name', 'desc': 'false'}
        example: {"page": 0, "pageSize": 10, "filtered": [], "sorted": []}

responses:
  200:
    description: "Success"
    schema:
      type: "object"
      example: [

          {
             "id": 123,
            "first_name": "Soumava",
            "last_name": "Paul",
            "email_address": "soumava.paul@themathcompany.com",
            "last_login":"",
            "access_key": "ACCeSS12345",
            "user_groups": [
              {
                "id": 123,
                "name": "group_row"
              }
            ],
            "user_groups_label": ["label"],
            "restricted_user": False
          }
      ]

  500:
    description: "Yet to be added in api"
    schema:
      type: "object"
      example: [
        "Error":"Error in query operation"
      ]
