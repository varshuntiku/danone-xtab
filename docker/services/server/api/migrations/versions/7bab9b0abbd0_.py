"""empty message

Revision ID: 7bab9b0abbd0
Revises: f17368ea3b0c
Create Date: 2020-09-19 19:29:10.733442

"""
from alembic import op
import sqlalchemy as sa
import json


# revision identifiers, used by Alembic.
revision = "7bab9b0abbd0"
down_revision = "f17368ea3b0c"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "project_notebook_config", sa.Column("accuracy", sa.Float(), nullable=True)
    )
    op.add_column(
        "project_notebook_config", sa.Column("dep_var", sa.Text(), nullable=True)
    )
    op.add_column(
        "project_notebook_config", sa.Column("exogs", sa.Text(), nullable=True)
    )
    op.add_column(
        "project_notebook_config", sa.Column("params", sa.Text(), nullable=True)
    )
    op.add_column(
        "project_notebook_config", sa.Column("technique", sa.Text(), nullable=True)
    )

    conn = op.get_bind()
    iterations = conn.execute(
        "SELECT id, config_params FROM project_notebook_config"
    ).fetchall()

    print("CODEX >>> ITERATIONS | Migrating params")

    total_iterations_count = 0
    fixed_iterations_count = 0
    error_iterations_count = 0

    for iteration in iterations:
        try:
            config_params = json.loads(iteration.config_params)
            if "params" in config_params and config_params["params"]:
                exogs = None
                if "exogs" in config_params["params"]:
                    exogs = "|".join(config_params["params"]["exogs"])

                params = None
                if (
                    "args" in config_params["params"]
                    and config_params["params"]["args"]
                ):
                    params = []
                    for arg_key in config_params["params"]["args"]:
                        params.append(
                            arg_key
                            + " - "
                            + str(config_params["params"]["args"][arg_key])
                        )
                    params = "|".join(params)

                conn.execute(
                    sa.sql.text(
                        "UPDATE project_notebook_config SET technique = :technique, dep_var = :dep_var, exogs = :exogs, params = :params, accuracy = :accuracy WHERE id = :iteration_id"
                    ),
                    technique=config_params["params"]["technique"]
                    if "technique" in config_params["params"]
                    else None,
                    dep_var=config_params["params"]["dep_var"]
                    if "dep_var" in config_params["params"]
                    else None,
                    accuracy=config_params["params"]["accuracy"]
                    if "accuracy" in config_params["params"]
                    else None,
                    exogs=exogs,
                    params=params,
                    iteration_id=iteration.id,
                )
                fixed_iterations_count = fixed_iterations_count + 1

            total_iterations_count = total_iterations_count + 1
        except Exception:
            error_iterations_count = error_iterations_count + 1

    print("CODEX >>> ITERATIONS | Fixed iterations: " + str(fixed_iterations_count))
    print("CODEX >>> ITERATIONS | Error iterations: " + str(error_iterations_count))
    print("CODEX >>> ITERATIONS | Total iterations: " + str(total_iterations_count))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("project_notebook_config", "technique")
    op.drop_column("project_notebook_config", "params")
    op.drop_column("project_notebook_config", "exogs")
    op.drop_column("project_notebook_config", "dep_var")
    op.drop_column("project_notebook_config", "accuracy")
    # ### end Alembic commands ###
