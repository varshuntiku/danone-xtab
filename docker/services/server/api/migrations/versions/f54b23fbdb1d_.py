"""empty message

Revision ID: f54b23fbdb1d
Revises: 713cacc8a910
Create Date: 2019-05-24 21:18:59.929316

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "f54b23fbdb1d"
down_revision = "713cacc8a910"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("feature_impute_task_id_fkey", "feature", type_="foreignkey")
    op.drop_column("feature", "data_median")
    op.drop_column("feature", "data_type")
    op.drop_column("feature", "comments")
    op.drop_column("feature", "impute_task_id")
    op.drop_column("feature", "no_factors")
    op.drop_column("feature", "is_primarykey_col")
    op.drop_column("feature", "is_continous_col")
    op.drop_column("feature", "business_impute")
    op.drop_column("feature", "data_mode")
    op.drop_column("feature", "ignore")
    op.drop_column("feature", "data_mean")
    op.drop_column("feature", "missing_percentage")
    op.drop_column("feature", "is_categorical_col")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "feature",
        sa.Column(
            "is_categorical_col", sa.BOOLEAN(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "feature",
        sa.Column(
            "missing_percentage",
            postgresql.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "feature",
        sa.Column(
            "data_mean", sa.VARCHAR(length=100), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "feature", sa.Column("ignore", sa.BOOLEAN(), autoincrement=False, nullable=True)
    )
    op.add_column(
        "feature",
        sa.Column(
            "data_mode", sa.VARCHAR(length=100), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "feature",
        sa.Column("business_impute", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "feature",
        sa.Column("is_continous_col", sa.BOOLEAN(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "feature",
        sa.Column(
            "is_primarykey_col", sa.BOOLEAN(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "feature",
        sa.Column("no_factors", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "feature",
        sa.Column("impute_task_id", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "feature",
        sa.Column(
            "comments", sa.VARCHAR(length=10000), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "feature",
        sa.Column(
            "data_type", sa.VARCHAR(length=100), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "feature",
        sa.Column(
            "data_median", sa.VARCHAR(length=100), autoincrement=False, nullable=True
        ),
    )
    op.create_foreign_key(
        "feature_impute_task_id_fkey", "feature", "task", ["impute_task_id"], ["id"]
    )
    # ### end Alembic commands ###
