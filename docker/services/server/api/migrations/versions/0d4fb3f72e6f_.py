"""empty message

Revision ID: 0d4fb3f72e6f
Revises: 5f346e225b32
Create Date: 2020-06-06 21:29:09.703928

"""
from alembic import op
import sqlalchemy as sa
import json


# revision identifiers, used by Alembic.
revision = "0d4fb3f72e6f"
down_revision = "5f346e225b32"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "widget_attachment",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("blob_name", sa.Text(), nullable=True),
        sa.Column("file_name", sa.Text(), nullable=True),
        sa.Column("file_header", sa.Text(), nullable=True),
        sa.Column("widget_id", sa.Integer(), nullable=True),
        sa.Column("created_by", sa.Integer(), nullable=True),
        sa.Column("updated_by", sa.Integer(), nullable=True),
        sa.Column("deleted_by", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["deleted_by"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["updated_by"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["widget_id"],
            ["widget.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    conn = op.get_bind()
    widgets = conn.execute("SELECT id, attachments_data FROM widget").fetchall()

    print("CODEX >>> WIDGET-FACTORY | Migrating attachments", end="")

    attachment_count = 0

    for widget in widgets:
        if widget.attachments_data is not None:
            attachments = json.loads(widget.attachments_data)
            for attachment in attachments:
                op.execute(
                    f"INSERT INTO widget_attachment (blob_name, file_header, widget_id) VALUES ('{attachment['blob_name']}', '{attachment['header']}', '{widget.id}')"
                )
                attachment_count = attachment_count + 1
                print(".", end="")

    print("")
    print(
        f"CODEX >>> WIDGET-FACTORY | Finished migrating attachments: {str(attachment_count)}"
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("widget_attachment")
    # ### end Alembic commands ###
