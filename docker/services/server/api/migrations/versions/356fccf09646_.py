"""empty message

Revision ID: 356fccf09646
Revises: 1a91d3ff3f2b
Create Date: 2023-04-06 17:10:03.740149

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "356fccf09646"
down_revision = "631432052a57"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "nac_role_permissions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("name", sa.String(length=1000), nullable=False),
        sa.Column("permission_type", sa.Integer(), nullable=True),
        sa.Column("created_by", sa.Integer(), nullable=True),
        sa.Column("updated_by", sa.Integer(), nullable=True),
        sa.Column("deleted_by", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["deleted_by"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["updated_by"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "nac_roles",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("name", sa.String(length=1000), nullable=False),
        sa.Column("user_role_type", sa.Integer(), nullable=True),
        sa.Column("created_by", sa.Integer(), nullable=True),
        sa.Column("updated_by", sa.Integer(), nullable=True),
        sa.Column("deleted_by", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["deleted_by"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["updated_by"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "nac_role_permissions_identifier",
        sa.Column("nac_role_id", sa.Integer(), nullable=True),
        sa.Column("nac_role_permissions_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["nac_role_id"],
            ["nac_roles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["nac_role_permissions_id"],
            ["nac_role_permissions.id"],
        ),
    )
    op.create_table(
        "nac_user_role_identifier",
        sa.Column("nac_role_id", sa.Integer(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["nac_role_id"],
            ["nac_roles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
    )

    insert_nac_role_query = """
        INSERT INTO nac_roles (created_at, updated_at, deleted_at, "name", user_role_type, created_by, updated_by, deleted_by) VALUES(now(), NULL, NULL, 'Prod App Creator', 1, NULL, NULL, NULL);
        INSERT INTO nac_roles (created_at, updated_at, deleted_at, "name", user_role_type, created_by, updated_by, deleted_by) VALUES(now(), NULL, NULL, 'App Creator', 1, NULL, NULL, NULL);
        INSERT INTO nac_roles (created_at, updated_at, deleted_at, "name", user_role_type, created_by, updated_by, deleted_by) VALUES(now(), NULL, NULL, 'App Admin', 1, NULL, NULL, NULL);
        INSERT INTO nac_roles (created_at, updated_at, deleted_at, "name", user_role_type, created_by, updated_by, deleted_by) VALUES(now(), NULL, NULL, 'App Default User', 1, NULL, NULL, NULL);
    """

    insert_nac_permissions_query = """
        INSERT INTO nac_role_permissions (created_at, updated_at, deleted_at, "name", permission_type, created_by, updated_by, deleted_by) VALUES(now(), NULL, NULL, 'create_variable', 1, NULL, NULL, NULL);
        INSERT INTO nac_role_permissions (created_at, updated_at, deleted_at, "name", permission_type, created_by, updated_by, deleted_by) VALUES(now(), NULL, NULL, 'create_preview_app', 1, NULL, NULL, NULL);
        INSERT INTO nac_role_permissions (created_at, updated_at, deleted_at, "name", permission_type, created_by, updated_by, deleted_by) VALUES(now(), NULL, NULL, 'create_execution_environment', 1, NULL, NULL, NULL);
        INSERT INTO nac_role_permissions (created_at, updated_at, deleted_at, "name", permission_type, created_by, updated_by, deleted_by) VALUES(now(), NULL, NULL, 'reset_all_app', 1, NULL, NULL, NULL);
        INSERT INTO nac_role_permissions (created_at, updated_at, deleted_at, "name", permission_type, created_by, updated_by, deleted_by) VALUES(now(), NULL, NULL, 'reset_my_app', 1, NULL, NULL, NULL);
        INSERT INTO nac_role_permissions (created_at, updated_at, deleted_at, "name", permission_type, created_by, updated_by, deleted_by) VALUES(now(), NULL, NULL, 'promote_app', 1, NULL, NULL, NULL);
        INSERT INTO nac_role_permissions (created_at, updated_at, deleted_at, "name", permission_type, created_by, updated_by, deleted_by) VALUES(now(), NULL, NULL, 'edit_production_app', 1, NULL, NULL, NULL);
        INSERT INTO nac_role_permissions (created_at, updated_at, deleted_at, "name", permission_type, created_by, updated_by, deleted_by) VALUES(now(), NULL, NULL, 'cloning_of_application', 1, NULL, NULL, NULL);
    """

    insert_role_permission_mapper = """
        INSERT INTO nac_role_permissions_identifier (nac_role_id, nac_role_permissions_id) VALUES(3, 1);
        INSERT INTO nac_role_permissions_identifier (nac_role_id, nac_role_permissions_id) VALUES(3, 2);
        INSERT INTO nac_role_permissions_identifier (nac_role_id, nac_role_permissions_id) VALUES(3, 3);
        INSERT INTO nac_role_permissions_identifier (nac_role_id, nac_role_permissions_id) VALUES(3, 4);
        INSERT INTO nac_role_permissions_identifier (nac_role_id, nac_role_permissions_id) VALUES(3, 5);
        INSERT INTO nac_role_permissions_identifier (nac_role_id, nac_role_permissions_id) VALUES(3, 6);
        INSERT INTO nac_role_permissions_identifier (nac_role_id, nac_role_permissions_id) VALUES(3, 7);
        INSERT INTO nac_role_permissions_identifier (nac_role_id, nac_role_permissions_id) VALUES(3, 8);
        INSERT INTO nac_role_permissions_identifier (nac_role_id, nac_role_permissions_id) VALUES(2, 1);
        INSERT INTO nac_role_permissions_identifier (nac_role_id, nac_role_permissions_id) VALUES(2, 2);
        INSERT INTO nac_role_permissions_identifier (nac_role_id, nac_role_permissions_id) VALUES(2, 5);
        INSERT INTO nac_role_permissions_identifier (nac_role_id, nac_role_permissions_id) VALUES(2, 8);
        INSERT INTO nac_role_permissions_identifier (nac_role_id, nac_role_permissions_id) VALUES(1, 1);
        INSERT INTO nac_role_permissions_identifier (nac_role_id, nac_role_permissions_id) VALUES(1, 2);
        INSERT INTO nac_role_permissions_identifier (nac_role_id, nac_role_permissions_id) VALUES(1, 3);
        INSERT INTO nac_role_permissions_identifier (nac_role_id, nac_role_permissions_id) VALUES(1, 4);
        INSERT INTO nac_role_permissions_identifier (nac_role_id, nac_role_permissions_id) VALUES(1, 5);
        INSERT INTO nac_role_permissions_identifier (nac_role_id, nac_role_permissions_id) VALUES(1, 7);
        INSERT INTO nac_role_permissions_identifier (nac_role_id, nac_role_permissions_id) VALUES(1, 8);
    """

    op.execute(insert_nac_role_query)
    op.execute(insert_nac_permissions_query)
    op.execute(insert_role_permission_mapper)

    insert_nac_user_role_mapping = """
        INSERT INTO nac_user_role_identifier (nac_role_id, user_id) select 3, user_id from public.user_group_identifier ugi where ugi.user_group_id in (
            select id from public.user_group ug where ug.app_publish=True and ug.deleted_at is null
        )
    """

    op.execute(insert_nac_user_role_mapping)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("nac_user_role_identifier")
    op.drop_table("nac_role_permissions_identifier")
    op.drop_table("nac_roles")
    op.drop_table("nac_role_permissions")
    # ### end Alembic commands ###
