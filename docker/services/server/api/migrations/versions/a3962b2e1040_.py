"""empty message

Revision ID: a3962b2e1040
Revises: 3c6c2ed48c04
Create Date: 2019-05-10 15:46:19.822781

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import insert, table, column
from sqlalchemy import orm, String, Boolean, Integer


# revision identifiers, used by Alembic.
revision = "a3962b2e1040"
down_revision = "3c6c2ed48c04"
branch_labels = None
depends_on = None


def upgrade():
    bind = op.get_bind()
    session = orm.Session(bind=bind)

    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("task", sa.Column("task_id", sa.Integer(), nullable=True))
    op.create_foreign_key(None, "task", "task", ["task_id"], ["id"])

    user_group = table(
        "user_group",
        column("name", String),
        column("data_prep", Boolean),
        column("model_train", Boolean),
        column("model_pipelines", Boolean),
        column("app_builder", Boolean),
        column("rbac", Boolean),
        column("user_group_type", Integer),
    )

    superuser_data = {
        "name": "super-user",
        "data_prep": True,
        "model_train": True,
        "model_pipelines": True,
        "app_builder": True,
        "rbac": True,
        "user_group_type": 1,
    }

    defaultuser_data = {
        "name": "default-user",
        "data_prep": False,
        "model_train": False,
        "model_pipelines": False,
        "app_builder": False,
        "rbac": False,
        "user_group_type": 1,
    }

    session.execute(insert(user_group).values(defaultuser_data))
    session.execute(insert(user_group).values(superuser_data))

    user = table(
        "user",
        column("first_name", String),
        column("last_name", String),
        column("email_address", String),
    )

    admin_user = {
        "first_name": "Shridhar",
        "last_name": "Guntury",
        "email_address": "shridhar@themathcompany.com",
    }

    session.execute(insert(user).values(admin_user))

    user_group_identifier = table(
        "user_group_identifier",
        column("user_id", Integer),
        column("user_group_id", Integer),
    )

    user_group_ident_1_data = {"user_id": 1, "user_group_id": 1}

    user_group_ident_2_data = {"user_id": 1, "user_group_id": 2}

    session.execute(insert(user_group_identifier).values(user_group_ident_1_data))
    session.execute(insert(user_group_identifier).values(user_group_ident_2_data))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "task", type_="foreignkey")
    op.drop_column("task", "task_id")
    # ### end Alembic commands ###
